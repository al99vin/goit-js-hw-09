{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAiBA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACxB,IAAIC,SAAQ,SAACC,EAASC,GACtCC,YAAW,WACNN,EACDI,EAAS,uBAAwCG,OAAfT,EAAS,QAAiBS,OAAXR,EAAW,OAE1DM,EAAK,sBAAqCE,OAAfT,EAAS,QAAiBS,OAAXR,EAAW,M,GAExDA,E,IAEKS,MAAK,SAAAC,G,OAAUC,EAAAf,GAASgB,OAAOC,QAAQH,E,IAASI,OAAM,SAAAJ,G,OAAUC,EAAAf,GAASgB,OAAOG,QAAQL,E,IA1B/EM,SAASC,cAAc,SAChCC,iBAAiB,UAEzB,SAAiBC,GACfA,EAAIC,iBACJ,IAA6BC,EAAAF,EAAIG,cAAcC,SAAxCC,EAAsBH,EAAtBG,MAAQC,EAAcJ,EAAdI,KAAMC,EAAQL,EAARK,OACrBC,QAAQC,IAAIJ,GAIZ,IAHA,IAAMxB,EAAa6B,OAAOL,EAAMM,OAC1BC,EAAYF,OAAOJ,EAAKK,OACxBE,EAAcH,OAAOH,EAAOI,OACzBG,EAAI,EAAGA,EAAID,EAAaC,IAC/BnC,EAAcmC,EAAE,EAAGjC,EAAaiC,EAAGF,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formRef =  document.querySelector('.form')\nformRef.addEventListener('submit', getData)\n\nfunction getData(evt) {\n  evt.preventDefault()\n  const {delay , step ,amount}=evt.currentTarget.elements;\n  console.log(delay);\n  const delayValue = Number(delay.value);\n  const stepValue = Number(step.value);\n  const amountValue = Number(amount.value);\n  for (let i = 0; i < amountValue; i++) {\n    createPromise(i+1, delayValue + i* stepValue);  \n  }\n}\n\nfunction createPromise(position, delayValue) {\n  const shouldResolve = Math.random() > 0.3;\n  let promise = new Promise((resolve, reject) => {\nsetTimeout(()=>{\n  if(shouldResolve) {\n    resolve (`✅ Fulfilled promise ${position} in ${delayValue}ms`)\n  } else {\n    reject(`❌ Rejected promise ${position} in ${delayValue}ms`) \n  }\n}, delayValue)  \n})\npromise.then(result => Notiflix.Notify.success(result)).catch(result => Notiflix.Notify.failure(result))\n} "],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delayValue","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","concat","then","result","$parcel$interopDefault","Notify","success","catch","failure","document","querySelector","addEventListener","evt","preventDefault","_elements","currentTarget","elements","delay","step","amount","console","log","Number","value","stepValue","amountValue","i"],"version":3,"file":"03-promises.450f2b0e.js.map"}